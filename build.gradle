plugins {
	id 'com.google.protobuf' version '0.9.1'
	id 'org.jetbrains.kotlin.jvm' version '1.9.10'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.10'
	id 'org.springframework.boot' version '3.2.11'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'

}

group = 'com.freedom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
//	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.google.protobuf:protobuf-java:3.21.12'

	implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

}
protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.21.12'
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {
					option 'lite'
				}
			}
		}
	}
}
kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
